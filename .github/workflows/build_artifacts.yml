name: Compile Debug and Release OpenLRR

on:
  push:
    paths:
      - src/openlrr/**
      - resources/**
    tags: 'v*'
    branches: '**'

jobs:
  Nightly_release_build:
    runs-on: windows-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@v3
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1
      - name: Build OpenLRR for x86 Release
        run: msbuild openlrr.sln /t:openlrr /p:Configuration=Release /p:Platform=x86
      - name: Rerrange files to easily use OpenLRR
        run: |
          mkdir OpenLRR/OpenLRR/
          Move-Item bin/openlrr.dll OpenLRR/OpenLRR/
          Move-Item OpenLRR.exe OpenLRR/OpenLRR/
          Move-Item data/* OpenLRR/OpenLRR/
      - name: Upload OpenLRR Release build
        uses: actions/upload-artifact@v3
        with:
          name: OpenLRR-Release
          path: |
            OpenLRR/

  Nightly_debug_build:
    runs-on: windows-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@v3
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1
      - name: Build OpenLRR for x86 Debug
        run: msbuild openlrr.sln /t:openlrr /p:Configuration=Debug /p:Platform=x86
      - name: Rerrange files to easily use OpenLRR
        run: |
          mkdir OpenLRR/OpenLRR/
          Move-Item bin/openlrr-d.dll OpenLRR/OpenLRR/
          Move-Item OpenLRR.exe OpenLRR/OpenLRR/
          Move-Item data/* OpenLRR/OpenLRR/
      - name: Upload OpenLRR Debug build
        uses: actions/upload-artifact@v3
        with:
          name: OpenLRR-Debug
          path: |
            OpenLRR/
  
  Prepare_release:
    runs-on: "ubuntu-latest" # Zip action only works on Ubuntu
    needs: Nightly_release_build
    # Trigger when a new tag is pusht
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Set tag in env # Extract the pusht tag into a variable for later use
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Get artifact # Faster to download instead of recompile
        uses: actions/download-artifact@v2
        with:
          name: OpenLRR-Release
      - name: Zip artifact
        uses: montudor/action-zip@v1
        with:
          args: zip -qq -r OpenLRR-${{ env.RELEASE_VERSION }}.zip OpenLRR/
      - name: Draft Public Release
        uses: "softprops/action-gh-release@v1"
        with:
          name: "Draft Release ${{ env.RELEASE_VERSION }}"
          draft: true
          files: OpenLRR-${{ env.RELEASE_VERSION }}.zip
